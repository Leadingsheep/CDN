s:10656:"<p>参考<br><a href="https://pwa.sspai.com/post/61463">看完这篇，自定义 OpenWrt/LEDE 路由固件不求人</a><br><a href="https://www.cnblogs.com/rogunt/p/17236958.html">从0开始编译LEDE（openwrt）</a><br><a href="https://www.right.com.cn/forum/forum.php?mod=viewthread&tid=8387547&highlight=%E8%BD%AF%E4%BB%B6%E5%8C%85%E5%AF%B9%E7%85%A7">openwrt(x86) 最近在编译immortalwrt整理一下软件包对照</a></p><h1 id="cl-1"><a class="markdownIt-Anchor" href="#cl-1"></a>教程开始前先学习几个命令</h1><p>ls 列出当前目录的内容<br>sudo ls /path/to/directory 列出指定目录的内容</p><p>cd /home/lty/lede/<br>cd：更改当前工作目录的命令。<br>/home/lty/lede/：目标目录的路径。</p><p>安全删除文件或目录<br>sudo rm -i 文件名<br>sudo rm -rf 目录名<br> 小心别把系统删了！！</p><p>教程开始 最好有代理 编译用普通用户模式<br>首先cd /home/lty/lede/ 进入LEDE 源码目录<br><img src="http://192.168.2.25/usr/uploads/2025/03/2448425741.png" alt="01.png" title="01.png"><br>运行 make menuconfig<br><img src="http://192.168.2.25/usr/uploads/2025/03/2149421932.png" alt="02.png" title="02.png"><br>键盘方向键控制 Select选择 &lt; Exit &gt;退出 &lt; Help &gt;帮助  &lt; Save &gt;保存 &lt; Load &gt;载入配置</p><h1 id="cl-2"><a class="markdownIt-Anchor" href="#cl-2"></a>Target System 目标系统 选择cpu架构</h1><p>我的路由器 Xiaomi Redmi Router AC2100<br>CPU MT7621 是联发科（MediaTek）MIPS 架构<br>ENTER键（就是回车键）进入<br><img src="http://192.168.2.25/usr/uploads/2025/03/1944961050.png" alt="03.png" title="03.png"><br>按空格键或ENTER键确认 MediaTek Ralink MIPS</p><h1 id="cl-3"><a class="markdownIt-Anchor" href="#cl-3"></a>Subtarget 选择cpu</h1><p><img src="http://192.168.2.25/usr/uploads/2025/03/4020395467.png" alt="04.png" title="04.png"></p><h1 id="cl-4"><a class="markdownIt-Anchor" href="#cl-4"></a>Target Profile 选择路由器型号</h1><p><img src="http://192.168.2.25/usr/uploads/2025/03/3800530413.png" alt="屏幕截图 2025-03-21 105312.png" title="屏幕截图 2025-03-21 105312.png"></p><h1 id="cl-5"><a class="markdownIt-Anchor" href="#cl-5"></a>Target Images 选择目标固件 （建议勾选上tar.gz）</h1><p><img src="http://192.168.2.25/usr/uploads/2025/03/4021184836.png" alt="屏幕截图 2025-03-21 105534.png" title="屏幕截图 2025-03-21 105534.png"><br>选择 &lt; Exit &gt; 退出</p><h1 id="cl-6"><a class="markdownIt-Anchor" href="#cl-6"></a>跳到 LuCI  ---&gt;</h1><p><img src="http://192.168.2.25/usr/uploads/2025/03/3856228524.png" alt="屏幕截图 2025-03-21 110300.png" title="屏幕截图 2025-03-21 110300.png"><br><img src="http://192.168.2.25/usr/uploads/2025/03/1998110888.png" alt="屏幕截图 2025-03-21 110401.png" title="屏幕截图 2025-03-21 110401.png"><br>选择 3. Applications  ---&gt;  软件包<br>可以用快捷键 选择自己需要的软件包<br>按<Y>包括、<N>排除、<M>模块化功能。<br><img src="http://192.168.2.25/usr/uploads/2025/03/2236704555.png" alt="屏幕截图 2025-03-21 110927.png" title="屏幕截图 2025-03-21 110927.png"><img src="http://192.168.2.25/usr/uploads/2025/03/699151931.png" alt="屏幕截图 2025-03-21 111137.png" title="屏幕截图 2025-03-21 111137.png"><img src="http://192.168.2.25/usr/uploads/2025/03/1022696309.png" alt="屏幕截图 2025-03-21 111301.png" title="屏幕截图 2025-03-21 111301.png"><img src="http://192.168.2.25/usr/uploads/2025/03/2351888913.png" alt="屏幕截图 2025-03-21 111314.png" title="屏幕截图 2025-03-21 111314.png"><img src="http://192.168.2.25/usr/uploads/2025/03/3163362666.png" alt="屏幕截图 2025-03-21 111335.png" title="屏幕截图 2025-03-21 111335.png"><br>选择 &lt; Exit &gt; 退出<br>进入 4. Themes  ---&gt;  主题<br>luci-theme-bootstrap 为默认<br><img src="http://192.168.2.25/usr/uploads/2025/03/100861380.png" alt="屏幕截图 2025-03-21 111951.png" title="屏幕截图 2025-03-21 111951.png"><br>选择 &lt; Exit &gt; 退出<br><img src="http://192.168.2.25/usr/uploads/2025/03/697229501.png" alt="屏幕截图 2025-03-21 151938.png" title="屏幕截图 2025-03-21 151938.png"></p><h1 id="cl-7"><a class="markdownIt-Anchor" href="#cl-7"></a>进入Base system  ---&gt; 基础系统  拉到最下面打开 ZRAM-SWAP</h1><p><img src="http://192.168.2.25/usr/uploads/2025/03/2410021004.png" alt="屏幕截图 2025-03-21 152015.png" title="屏幕截图 2025-03-21 152015.png"><br>ZRAM是linux的一种内存优化技术，基本工作原理是：内核通过划定一片内存区域，将不常使用的应用程序占用的内存，压缩后放入该区域中，需要调用的时候再快速解压读取出来<a href="https://www.right.com.cn/forum/forum.php?mod=viewthread&tid=343836&highlight=zram">参考</a><br>选择 &lt; Exit &gt; 退出<br>我的路由器   以下改无线驱动不需要 默认<br>2.4g WiFi: MT7603 (FEM: QPF4200)<br>5g WiFi: MT7615N<br>Kernel modules  ---&gt;   内核模块<br><img src="http://192.168.2.25/usr/uploads/2025/03/2687959054.png" alt="屏幕截图 2025-03-21 152919.png" title="屏幕截图 2025-03-21 152919.png"><br> Wireless Drivers  ---&gt; 无线驱动<br><img src="http://192.168.2.25/usr/uploads/2025/03/2052508344.png" alt="屏幕截图 2025-03-21 152935.png" title="屏幕截图 2025-03-21 152935.png"><br>或 Save 保存<br>我这里保存<br><img src="http://192.168.2.25/usr/uploads/2025/03/1877348973.png" alt="屏幕截图 2025-03-21 112403.png" title="屏幕截图 2025-03-21 112403.png"><br>&lt;  Ok  &gt;<br><img src="http://192.168.2.25/usr/uploads/2025/03/2666154523.png" alt="屏幕截图 2025-03-21 112518.png" title="屏幕截图 2025-03-21 112518.png"><br>No change to .config 没有对. config的更改 因为编译过了第一次编译不会提示这个<br> &lt; Exit &gt;  退出到命令行<br>可以看到.config 配置已有<br><img src="http://192.168.2.25/usr/uploads/2025/03/270929122.png" alt="屏幕截图 2025-03-21 113356.png" title="屏幕截图 2025-03-21 113356.png"></p><h1 id="cl-8"><a class="markdownIt-Anchor" href="#cl-8"></a>下载 dl 库，编译固件 （-j 后面是线程数，第一次编译推荐用单线程）编译时间长</h1><pre><code class="lang-shell">make download -j8
make V=s -j1</code></pre><p>编译完成<br><img src="http://192.168.2.25/usr/uploads/2025/03/326979813.png" alt="屏幕截图 2025-03-21 113823.png" title="屏幕截图 2025-03-21 113823.png"><br>固件保存位置lede/bin/targets/ramips/mt7621/<br><img src="http://192.168.2.25/usr/uploads/2025/03/1138795666.png" alt="屏幕截图 2025-03-21 114041.png" title="屏幕截图 2025-03-21 114041.png"><br>下载到电脑<br><img src="http://192.168.2.25/usr/uploads/2025/03/3556510723.png" alt="屏幕截图 2025-03-21 114459.png" title="屏幕截图 2025-03-21 114459.png"><br><img src="http://192.168.2.25/usr/uploads/2025/03/3074733986.png" alt="屏幕截图 2025-03-21 114647.png" title="屏幕截图 2025-03-21 114647.png"></p><h1 id="cl-9"><a class="markdownIt-Anchor" href="#cl-9"></a>二次编译：</h1><pre><code class="lang-shell">cd lede
git pull
./scripts/feeds update -a
./scripts/feeds install -a
make defconfig
make download -j8
make V=s -j$(nproc)</code></pre><h1 id="cl-10"><a class="markdownIt-Anchor" href="#cl-10"></a>如果需要重新配置：</h1><pre><code class="lang-shell">rm -rf .config
make menuconfig
make V=s -j$(nproc)</code></pre><h1 id="cl-11"><a class="markdownIt-Anchor" href="#cl-11"></a>清理并重新编译</h1><pre><code class="lang-shell">cd ~/lede
make clean
make download -j8
make V=s -j$(nproc)</code></pre><h1 id="cl-12"><a class="markdownIt-Anchor" href="#cl-12"></a>进阶</h1><p>添加没有自己想要的软件包 <br><a href="https://github.com/sirpdboy/luci-app-ddns-go">luci-app-ddns-go</a><br>将luci-app-ddns-go添加至 LEDE/OpenWRT 源码<br>下载源码 在OpenWrt源码目录进行</p><pre><code class="lang-shell">git clone https://github.com/sirpdboy/luci-app-ddns-go.git package/ddns-go
./scripts/feeds update -a
./scripts/feeds install -a</code></pre><p>配置菜单<br>   make menuconfig<br>找到 LuCI -&gt; Applications, 选择 luci-app-ddns-go, 保存后退出。<br>编译固件<br>   make package/ddns-go/luci-app-ddns-go/compile V=s<br><a href="https://github.com/linkease/nas-packages-luci">luci-app-ddnsto</a><br><img src="http://192.168.2.25/usr/uploads/2025/03/2669643303.png" alt="屏幕截图 2025-03-21 115956.png" title="屏幕截图 2025-03-21 115956.png"><br><a href="https://github.com/destan19/OpenAppFilter">OpenAppFilter</a>家长控制插件，支持对游戏、视频、聊天、下载等应用进行过滤</p><h1 id="cl-13"><a class="markdownIt-Anchor" href="#cl-13"></a>源码修改登录IP</h1><p>源码lede/package/base-files/files/bin/<br><img src="http://192.168.2.25/usr/uploads/2025/03/1555736070.png" alt="屏幕截图 2025-03-21 171528.png" title="屏幕截图 2025-03-21 171528.png"><br>打开config_generate<br><img src="http://192.168.2.25/usr/uploads/2025/03/3634080099.png" alt="屏幕截图 2025-03-21 171706.png" title="屏幕截图 2025-03-21 171706.png"><br>找到 lan) ipad=${ipaddr:-"192.168.1.1"} ;;<br>修改登录192.168.2.1<br>登录密码默认：password</p><p>此处为 /etc/rc.local 的内容。启动脚本插入到“exit 0”之前即可随系统启动运行。</p><pre><code class="lang-xml">ifconfig rai0 up
ifconfig ra0 up
brctl addif br-lan rai0
brctl addif br-lan ra0

exit 0</code></pre><p>解释：启用无线接口 rai0<br>启用无线接口 ra0<br>将无线接口 rai0 添加到桥接接口 br-lan<br>将无线接口 ra0 添加到桥接接口 br-lan<br>退出脚本并返回状态码 0，表示成功。</p><p>自定义系统 crontab 中的计划任务。<br>58 23 <em> </em> 0 sleep 70 && touch /etc/banner && reboot</p><p>解释：在每周日的 23:58 分等待 70 秒重启系统<br>58 23 <em> </em> 0：这是 cron 语法，表示每周日的 23:58 执行任务。<br>58：分钟（58 分钟）<br>23：小时（23 小时，即晚上 11 点）<br>*：日期（每天）<br>*：月份（每月）<br>0：星期几（0 表示周日）<br>sleep 70：等待 70 秒。这通常用于确保任务在指定时间之后执行，避免因为系统时间同步或其他原因导致任务提前执行。<br>touch /etc/banner：创建或更新 /etc/banner 文件的时间戳。touch 命令用于更新文件的时间戳，如果文件不存在，则会创建一个空文件。<br>reboot：重启系统。</p><p>推荐 <a href="https://github.com/wukongdaily/OpenBackRestore">iStoreOS/OpenWrt一键备份与恢复脚本</a></p>";